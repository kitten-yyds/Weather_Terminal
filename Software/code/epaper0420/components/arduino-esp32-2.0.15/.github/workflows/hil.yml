name: Run tests in hardware

on:
  pull_request:
    types: [opened, reopened, synchronize, labeled]

  schedule:
    - cron: '0 2 * * *'

env:
  MAX_CHUNKS: 15

concurrency:
  group: hil-${{github.event.pull_request.number || github.ref}}
  cancel-in-progress: true

jobs:
  gen_chunks:
    if: |
      contains(github.event.pull_request.labels.*.name, 'hil_test') ||
      (github.event_name == 'schedule' && github.repository == 'espressif/arduino-esp32')
    name: Generate Chunks matrix
    runs-on: ubuntu-latest
    outputs:
      chunks: ${{ steps.gen-chunks.outputs.chunks }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Generate Chunks matrix
        id: gen-chunks
        run: |
          set +e
          .github/scripts/sketch_utils.sh count tests
          sketches=$?
          if [[ $sketches -ge ${{env.MAX_CHUNKS}} ]]; then
            $sketches=${{env.MAX_CHUNKS}}
          fi
          set -e
          rm sketches.txt
          CHUNKS=$(jq -c -n '$ARGS.positional' --args `seq 0 1 $((sketches - 1))`)
          echo "chunks=${CHUNKS}" >>$GITHUB_OUTPUT

  Build:
    needs: gen_chunks
    name: ${{matrix.chip}}-Build#${{matrix.chunks}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chip: ['esp32', 'esp32s2', 'esp32s3', 'esp32c3']
        chunks: ${{fromJson(needs.gen_chunks.outputs.chunks)}}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Build sketches
        run: |
          bash .github/scripts/tests_build.sh -c -t ${{matrix.chip}} -i ${{matrix.chunks}} -m ${{env.MAX_CHUNKS}}
      - name: Upload ${{matrix.chip}}-${{matrix.chunks}} artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.chip}}-${{matrix.chunks}}.artifacts
          path: |
             ~/.arduino/tests/*/build*.tmp/*.bin
             ~/.arduino/tests/*/build*.tmp/*.json
          if-no-files-found: error
  Test:
    needs: [gen_chunks, Build]
    name: ${{matrix.chip}}-Test#${{matrix.chunks}}
    runs-on:
      - ESP32
      - ESP32-S2
      - ESP32-S3
      - ESP32-C3

    strategy:
      fail-fast: false
      matrix:
        chip: ['esp32', 'esp32s2', 'esp32s3', 'esp32c3']
        chunks: ${{fromJson(needs.gen_chunks.outputs.chunks)}}
    container:
      image: python:3.10.1-bullseye
      options: --privileged

    steps:
       - name: Checkout repository
         uses: actions/checkout@v3

       - name: Download ${{matrix.chip}}-${{matrix.chunks}} artifacts
         uses: actions/download-artifact@v3
         with:
           name: ${{matrix.chip}}-${{matrix.chunks}}.artifacts
           path: ~/.arduino/tests/

       - name: Install dependencies
         run: |
           pip install -U pip
           pip install -r tests/requirements.txt
           apt update && apt install -y -qq jq

       - name: Run Tests
         run: |
           bash .github/scripts/tests_run.sh -c -t ${{matrix.chip}} -i ${{matrix.chunks}} -m ${{env.MAX_CHUNKS}} -e

       - name: Upload test result artifacts
         uses: actions/upload-artifact@v3
         if: always()
         with:
           name: test_results-${{matrix.chip}}-${{matrix.chunks}}
           path: tests/*/*.xml

  event_file:
    name: "Event File"
    if: |
      contains(github.event.pull_request.labels.*.name, 'hil_test') ||
      github.event_name == 'schedule'
    needs: Test
    runs-on: ubuntu-latest
    steps:
       - name: Upload
         uses: actions/upload-artifact@v3
         with:
           name: Event File
           path: ${{github.event_path}}
